@page "/datagenerator"
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime


<h3>Data Generator</h3>

<button @onclick="StartDataGeneration">Start</button>
<button @onclick="StopDataGeneration">Stop</button>

<p>X: @x</p>


<div id="dataChart"></div>



@code {
    private bool isGeneratingData = false;
    private double x = 0;

    private void StartDataGeneration()
    {
        isGeneratingData = true;
        GenerateData();
    }

    private void StopDataGeneration()
    {
        isGeneratingData = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // await JSRuntime.InvokeVoidAsync("createPlot");
            var hello = await JSRuntime.InvokeAsync<string>("sayHello"); 
            Console.WriteLine(hello);
        }
    }

    private async Task GenerateData()
    {
        while (isGeneratingData)
        {

            x = Math.Sin(DateTime.Now.Millisecond / 10000.0);

            Console.WriteLine("X: " + x);

            // await JSRuntime.InvokeVoidAsync("updateChartData", x);

            await Task.Delay(100); // Delay between data generations

            StateHasChanged();
        }
    }
}
